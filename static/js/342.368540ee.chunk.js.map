{"version":3,"file":"static/js/342.368540ee.chunk.js","mappings":"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","sources":["pages/Descubra.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, Form, Button, ListGroup, Modal } from 'react-bootstrap';\r\nimport { FiRefreshCw } from \"react-icons/fi\";\r\nimport { BsGlobeCentralSouthAsia } from \"react-icons/bs\";\r\nimport { FaPhabricator } from \"react-icons/fa6\";\r\nimport { MdCatchingPokemon } from \"react-icons/md\";\r\nimport \"./css/Descubra.css\";\r\nimport emailjs from \"@emailjs/browser\";\r\nimport Loading from './Loading'\r\nimport { envioEmail } from \"../assets/envioEmail\";\r\n\r\nfunction Descubra() {\r\n    const [pokemon, setPokemon] = useState(null);\r\n    const [guess, setGuess] = useState('');\r\n    const [attempts, setAttempts] = useState([]);\r\n    const [correct, setCorrect] = useState(false);\r\n    const [allNames, setAllNames] = useState([]);\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    const [showGenHint, setShowGenHint] = useState(false);\r\n    const [generationHint, setGenerationHint] = useState('');\r\n    const [showAbilityHint, setShowAbilityHint] = useState(false);\r\n    const [abilityHint, setAbilityHint] = useState('');\r\n    const [showImageCenterHint, setShowImageCenterHint] = useState(false);\r\n\r\n    const [initialOffset, setInitialOffset] = useState({ x: 0, y: 0 });\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [userEmail, setUserEmail] = useState('');\r\n    const [emailSent, setEmailSent] = useState(false);\r\n\r\n    const [showLoader, setShowLoader] = useState(true);\r\n    const minLoadingTime = 0;\r\n\r\n    const admin = localStorage.getItem('tipoUsuario') === 'Administrador' ? true : false;\r\n    // console.log(\"Tipo de admin:\", admin);\r\n\r\n    const handleFinishLoading = () => {\r\n        setShowLoader(false)\r\n    }\r\n\r\n    const generateRandomOffset = () => {\r\n        const rand = () => (Math.random() * 60) - 30;\r\n        return { x: rand(), y: rand() };\r\n    };\r\n\r\n    const getImageStyle = () => {\r\n        const tries = attempts.length;\r\n\r\n        if (correct || showImageCenterHint) {\r\n            return {\r\n                transform: `translate(-50%, -50%) scale(1)`,\r\n                top: '50%',\r\n                left: '50%',\r\n                transformOrigin: 'center center',\r\n                position: 'absolute',\r\n            };\r\n        }\r\n\r\n        const zoomMap = [2.2, 2.0, 1.8, 1.6, 1.4, 1.2, 1.1, 1.05, 1.02, 1.0];\r\n        const zoom = zoomMap[Math.min(tries, zoomMap.length - 1)];\r\n\r\n        return {\r\n            transform: `translate(${initialOffset.x}%, ${initialOffset.y}%) scale(${zoom})`,\r\n            position: 'absolute',\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchPokemon = async () => {\r\n            const maxId = 1025;\r\n            let validPokemon = null;\r\n\r\n            while (!validPokemon) {\r\n                const id = Math.floor(Math.random() * maxId) + 1;\r\n                try {\r\n                    const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${id}`);\r\n                    const image = response.data.sprites.other['official-artwork'].front_default;\r\n\r\n                    if (image) {\r\n                        const ability = response.data.abilities?.[0]?.ability?.name || '';\r\n                        validPokemon = {\r\n                            name: response.data.name,\r\n                            image: image,\r\n                            id: response.data.id,\r\n                        };\r\n                        setAbilityHint(`Habilidade: ${ability.charAt(0).toUpperCase() + ability.slice(1)}`);\r\n                    }\r\n                } catch (error) {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            document.title = \"Adivinhação de Pokémons\"\r\n            envioEmail(\"Mini game - Adivinhação de Pokémons\")\r\n\r\n            setInitialOffset(generateRandomOffset());\r\n            setPokemon(validPokemon);\r\n        };\r\n\r\n        const fetchNames = async () => {\r\n            const response = await axios.get('https://pokeapi.co/api/v2/pokemon?limit=2000');\r\n            setAllNames(\r\n                response.data.results.map(p => {\r\n                    const id = p.url.split('/').filter(Boolean).pop();\r\n                    return { name: p.name, id };\r\n                })\r\n            );\r\n\r\n        };\r\n\r\n        fetchPokemon();\r\n        fetchNames();\r\n        if (!showLoader) {\r\n            window.scrollTo(0, 0);\r\n        }\r\n    }, [showLoader]);\r\n\r\n    if (showLoader) {\r\n        return <Loading minTime={minLoadingTime} onFinish={handleFinishLoading} />\r\n    }\r\n\r\n    const getGeneration = (id) => {\r\n        if (id <= 151) return 'I';\r\n        if (id <= 251) return 'II';\r\n        if (id <= 386) return 'III';\r\n        if (id <= 493) return 'IV';\r\n        if (id <= 649) return 'V';\r\n        if (id <= 721) return 'VI';\r\n        if (id <= 809) return 'VII';\r\n        if (id <= 905) return 'VIII';\r\n        return 'IX';\r\n    };\r\n\r\n    const revealGenerationHint = () => {\r\n        const gen = getGeneration(pokemon.id);\r\n        setGenerationHint(`Dica: Esse Pokémon é da geração ${gen}`);\r\n        setShowGenHint(true);\r\n    };\r\n\r\n    const handleGuess = async (e) => {\r\n        e.preventDefault();\r\n        const normalized = guess.trim().toLowerCase();\r\n        if (!normalized) return;\r\n\r\n        const nameIsValid = allNames.some(p => p.name.toLowerCase() === normalized);\r\n        if (!nameIsValid) {\r\n            setAlertMessage('Digite um nome de Pokémon válido!');\r\n            setGuess('');\r\n            setSuggestions([]);\r\n            setTimeout(() => setAlertMessage(''), 3000);\r\n            return;\r\n        }\r\n\r\n        if (attempts.some(attempt => attempt.name === normalized)) {\r\n            setAlertMessage('Você já tentou esse Pokémon!');\r\n            setGuess('');\r\n            setSuggestions([]);\r\n            setTimeout(() => setAlertMessage(''), 3000);\r\n            return;\r\n        }\r\n\r\n        if (normalized === pokemon.name.toLowerCase()) {\r\n            setCorrect(true);\r\n            setAttempts(prev => [...prev, { name: normalized, image: pokemon.image }]);\r\n            setShowModal(true);\r\n        } else {\r\n            try {\r\n                const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${normalized}`);\r\n                const imageUrl = response.data.sprites.other['official-artwork'].front_default;\r\n                setAttempts(prev => [...prev, { name: normalized, image: imageUrl }]);\r\n            } catch (error) {\r\n                setAttempts(prev => [...prev, { name: normalized, image: null }]);\r\n            }\r\n        }\r\n\r\n        setGuess('');\r\n        setSuggestions([]);\r\n    };\r\n\r\n    const sendEmail = (e) => {\r\n        e.preventDefault();\r\n\r\n        const templateParams = {\r\n            to_email: userEmail,\r\n            pokemon_name: pokemon.name,\r\n            total_attempts: attempts.length,\r\n        };\r\n\r\n        emailjs.send('service_vqi7mlk', 'template_1i4c3iy', templateParams, 'VxnhsgVhBwkWbVxha')\r\n            .then((response) => {\r\n                console.log('Email enviado com sucesso!', response.status, response.text);\r\n                setEmailSent(true);\r\n            }, (error) => {\r\n                console.log('Erro ao enviar o email:', error);\r\n            });\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const input = e.target.value;\r\n        setGuess(input);\r\n\r\n        if (input.length === 0) {\r\n            setSuggestions([]);\r\n            return;\r\n        }\r\n\r\n        const filtered = allNames.filter(p =>\r\n            p.name.toLowerCase().startsWith(input.toLowerCase())\r\n        );\r\n        setSuggestions(filtered.slice(0, 1025));\r\n    };\r\n\r\n    const handleSuggestionClick = (name) => {\r\n        setGuess(name);\r\n        setSuggestions([]);\r\n    };\r\n\r\n    const restartGame = async () => {\r\n        const maxId = 1025;\r\n        let validPokemon = null;\r\n\r\n        while (!validPokemon) {\r\n            const id = Math.floor(Math.random() * maxId) + 1;\r\n            try {\r\n                const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${id}`);\r\n                const image = response.data.sprites.other['official-artwork'].front_default;\r\n\r\n                if (image) {\r\n                    const ability = response.data.abilities?.[0]?.ability?.name || '';\r\n                    validPokemon = {\r\n                        name: response.data.name,\r\n                        image: image,\r\n                        id: response.data.id,\r\n                    };\r\n                    setAbilityHint(`Habilidade: ${ability.charAt(0).toUpperCase() + ability.slice(1)}`);\r\n                }\r\n            } catch (error) {\r\n                continue;\r\n            }\r\n        }\r\n\r\n        setInitialOffset(generateRandomOffset());\r\n        setPokemon(validPokemon);\r\n        setAttempts([]);\r\n        setCorrect(false);\r\n        setGuess('');\r\n        setSuggestions([]);\r\n        setShowGenHint(false);\r\n        setGenerationHint('');\r\n        setShowAbilityHint(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"Background mx-auto d-block mt-5 mb-5 p-4\">\r\n                <h5 className=\"mb-4 text-center title\">De que Pokémon é esta silhueta?</h5>\r\n\r\n                {pokemon && (\r\n                    <div className=\"d-flex align-items-center justify-content-center mb-4\">\r\n                        <div className=\"pokemon-mask-container\">\r\n                            <div className={`pokemon-mask`}>\r\n                                <div className={`pokemon-background-image`}></div>\r\n                                <img\r\n                                    src={pokemon.image}\r\n                                    alt=\"Pokémon Silhueta\"\r\n                                    className={`pokemon-img ${correct ? 'revealed' : 'silhouette'}`}\r\n                                    style={getImageStyle()}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <div className='text-center my-3'>\r\n                    <button\r\n                        className=\"refresh-button\"\r\n                        onClick={restartGame}\r\n                        title=\"Recomeçar\"\r\n                    >\r\n                        Recomeçar\r\n                        <FiRefreshCw size={24} className='ms-3' />\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"hint-section mt-4 border border-dark\">\r\n                    <h5 className=\"mb-3 title\">DICAS</h5>\r\n\r\n                    <div className=\"d-flex justify-content-center gap-3 flex-wrap\">\r\n                        <div className={`hint-card ${attempts.length >= 5 ? 'unlocked' : ''}`}>\r\n                            <MdCatchingPokemon className='hint-icon-bg' />\r\n                            <div className=\"hint-title\">Geração</div>\r\n                            <div className=\"hint-subtext\">Dica disponível após 5 tentativas</div>\r\n                            {attempts.length >= 5 && !showGenHint && (\r\n                                <Button variant=\"outline-primary\" size=\"sm\" onClick={revealGenerationHint}>\r\n                                    Mostrar\r\n                                </Button>\r\n                            )}\r\n                            {showGenHint && <div className=\"hint-result mt-2\">{generationHint}</div>}\r\n                        </div>\r\n\r\n                        <div className={`hint-card ${attempts.length >= 7 ? 'unlocked' : ''}`}>\r\n                            <FaPhabricator className='hint-icon-bg' />\r\n                            <div className=\"hint-title\">Habilidade</div>\r\n                            <div className=\"hint-subtext\">Dica disponível após 7 tentativas</div>\r\n                            {attempts.length >= 7 && !showAbilityHint && (\r\n                                <Button variant=\"outline-primary\" size=\"sm\" onClick={() => setShowAbilityHint(true)}>\r\n                                    Mostrar\r\n                                </Button>\r\n                            )}\r\n                            {showAbilityHint && (\r\n                                <div className=\"hint-result mt-2\">{abilityHint}</div>\r\n                            )}\r\n                        </div>\r\n                        <div className={`hint-card ${attempts.length >= 10 ? 'unlocked' : ''}`}>\r\n                            <BsGlobeCentralSouthAsia className='hint-icon-bg' />\r\n                            <div className=\"hint-title\">Imagem Centralizada</div>\r\n                            <div className=\"hint-subtext\">Dica disponível após 10 tentativas</div>\r\n\r\n                            {attempts.length >= 10 && !showImageCenterHint && (\r\n                                <Button\r\n                                    variant=\"outline-primary\"\r\n                                    size=\"sm\"\r\n                                    onClick={() => setShowImageCenterHint(true)}\r\n                                >\r\n                                    Mostrar\r\n                                </Button>\r\n                            )}\r\n\r\n                            {showImageCenterHint && (\r\n                                <div className=\"hint-result mt-2 text-success\">\r\n                                    A imagem foi centralizada!\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n            <Container className=\"Background rounded-3 mx-auto d-block mt-5 mb-5 p-4 text-center\">\r\n                {alertMessage && (\r\n                    <div className=\"alert alert-warning py-2\">\r\n                        {alertMessage}\r\n                    </div>\r\n                )}\r\n\r\n                {!correct && (\r\n                    <Form onSubmit={handleGuess} autoComplete=\"off\">\r\n                        <Form.Group className=\"mb-2 position-relative\">\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Digite o nome do Pokémon\"\r\n                                value={guess}\r\n                                onChange={handleInputChange}\r\n                                autoFocus\r\n                            />\r\n                            {suggestions.length > 0 && (\r\n                                <ListGroup className=\"autocomplete-list\">\r\n                                    {suggestions.map((p, i) => (\r\n                                        <ListGroup.Item\r\n                                            key={i}\r\n                                            action\r\n                                            onClick={() => handleSuggestionClick(p.name)}\r\n                                            className=\"d-flex align-items-center gap-2\"\r\n                                        >\r\n                                            <img\r\n                                                src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${p.id}.png`}\r\n                                                alt={p.name}\r\n                                                style={{ width: 32, height: 32 }}\r\n                                            />\r\n                                            <span>{p.name.charAt(0).toUpperCase() + p.name.slice(1)}</span>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </Form.Group>\r\n                        <Button type=\"submit\" variant=\"primary\">Enviar</Button>\r\n                    </Form>\r\n                )}\r\n            </Container>\r\n\r\n            <Container className=\"Background rounded-3 mx-auto d-block mt-5 mb-5 p-4 text-center\">\r\n                <h5 className=\"mb-4 title\">Tentativas:</h5>\r\n                <ListGroup className=\"text-start mx-auto\" style={{ maxWidth: 400 }}>\r\n                    {attempts.map((attempt, index) => (\r\n                        <ListGroup.Item\r\n                            key={index}\r\n                            variant={attempt.name === pokemon?.name.toLowerCase() ? 'success' : ''}\r\n                            className=\"d-flex align-items-center gap-2\"\r\n                        >\r\n                            {attempt.image && (\r\n                                <img\r\n                                    src={attempt.image}\r\n                                    alt={attempt.name}\r\n                                    style={{ width: 40, height: 40 }}\r\n                                    className=\"shadow-img\"\r\n                                />\r\n                            )}\r\n                            <span>{attempt.name.charAt(0).toUpperCase() + attempt.name.slice(1)}</span>\r\n                        </ListGroup.Item>\r\n                    ))}\r\n                </ListGroup>\r\n            </Container>\r\n\r\n            {admin && (\r\n                <div className=\"mt-4 text-start m-3\">\r\n                    <pre className=\"bg-light p-3 rounded\">\r\n                        <h5>Visualização JSON (Apenas para Administradores)</h5>\r\n                        {JSON.stringify(pokemon, null, 2)}\r\n                    </pre>\r\n                </div>\r\n            )}\r\n\r\n            <Modal show={showModal} onHide={() => setShowModal(false)} centered animation={true}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>🎉 Parabéns!</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>Você adivinhou o Pokémon: <strong>{pokemon?.name.charAt(0).toUpperCase() + pokemon?.name.slice(1)}</strong>!</p>\r\n                    <p>Total de tentativas: <strong>{attempts.length}</strong></p>\r\n\r\n                    {!emailSent ? (\r\n                        <Form onSubmit={sendEmail}>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Quer receber esse resultado por email?</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"email\"\r\n                                    placeholder=\"Digite seu email\"\r\n                                    value={userEmail}\r\n                                    onChange={(e) => setUserEmail(e.target.value)}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Enviar\r\n                            </Button>\r\n                        </Form>\r\n                    ) : (\r\n                        <div className=\"text-success\">\r\n                            ✅ Email enviado com sucesso!\r\n                        </div>\r\n                    )}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\r\n                        Fechar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Descubra;"],"names":["pokemon","setPokemon","useState","guess","setGuess","attempts","setAttempts","correct","setCorrect","allNames","setAllNames","suggestions","setSuggestions","alertMessage","setAlertMessage","showGenHint","setShowGenHint","generationHint","setGenerationHint","showAbilityHint","setShowAbilityHint","abilityHint","setAbilityHint","showImageCenterHint","setShowImageCenterHint","initialOffset","setInitialOffset","x","y","showModal","setShowModal","userEmail","setUserEmail","emailSent","setEmailSent","showLoader","setShowLoader","admin","localStorage","getItem","handleFinishLoading","generateRandomOffset","rand","Math","random","useEffect","async","validPokemon","id","floor","response","axios","get","concat","image","data","sprites","other","front_default","_response$data$abilit","_response$data$abilit2","_response$data$abilit3","ability","abilities","name","charAt","toUpperCase","slice","error","document","title","envioEmail","fetchPokemon","results","map","p","url","split","filter","Boolean","pop","fetchNames","window","scrollTo","_jsx","Loading","minTime","onFinish","_jsxs","_Fragment","children","Container","className","src","alt","style","getImageStyle","tries","length","transform","top","left","transformOrigin","position","zoomMap","zoom","min","onClick","_response$data$abilit4","_response$data$abilit5","_response$data$abilit6","FiRefreshCw","size","MdCatchingPokemon","Button","variant","revealGenerationHint","gen","FaPhabricator","BsGlobeCentralSouthAsia","Form","onSubmit","e","preventDefault","normalized","trim","toLowerCase","some","setTimeout","attempt","prev","imageUrl","autoComplete","Group","Control","type","placeholder","value","onChange","input","target","filtered","startsWith","autoFocus","ListGroup","i","Item","action","handleSuggestionClick","width","height","maxWidth","index","JSON","stringify","Modal","show","onHide","centered","animation","Header","closeButton","Title","Body","templateParams","to_email","pokemon_name","total_attempts","emailjs","then","console","log","status","text","Label","required","Footer"],"sourceRoot":""}